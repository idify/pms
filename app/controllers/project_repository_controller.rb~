class ProjectRepositoryController < ApplicationController
before_filter :check_manager


	def new
  	@project = Project.find(params[:project_id])
  	@project_repository = ProjectRepository.new
  end

  def create
  	@project = Project.find(params[:project_id])
  	@project_repository  = @project.build_project_repository(project_repository_params)
  		if @project_repository.save
   			redirect_to project_project_repository_index_path(@project), :notice => "Successfully submit project repository details"
  			else
   				render :new 
      end
  end

  def index
  	@project = Project.find(params[:project_id])
   	@project_repository = @project.project_repository
  end

  def show
  	@project = Project.find(paramsj[:project_id])
  	@project_repository  =  @project.project_repository.find(params[:id])
 	end

  def update
    @project = Project.find(params[:project_id])
    project_repository = @project.project_repository.find(params[:id])
     if project_repository.update_attributes(project_repository_params)
       redirect_to project_project_repository_index_path(@project), :notice => "Updated Successfully"
      else
        render :edit , :notice => "sorry..something is wrong"
     end
  end

  def destroy
  	@project = Project.find(params[:project_id])
  	project_repository = ProjectRepository.find(params[:id])  
  	project_repository.destroy
  		redirect_to project_project_repository_index_path(@project), :notice => "Successfully deleted"
 	end

 	def edit
  	@project = Project.find(params[:project_id])
   @project_repository  =  ProjectRepository.find(params[:id])
  end

   private
    def check_manager
		 @project = Project.find(params[:project_id]) 
		 redirect_to projects_path  if @project.user != current_user && !current_user.isAdmin
		end
  	def project_repository_params
	  	params.require(:project_repository).permit(:project_id, :name, :document, :remote_document_url)
    end
end
