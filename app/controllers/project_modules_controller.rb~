class ProjectModulesController < ApplicationController
	before_filter :check_manager

  def new
    @project = Project.find(params[:project_id])
    @project_module  = @project.project_modules.new
  end

  def create
   @project = Project.find(params[:project_id])
   if @project.present?
     if (params[:project_module][:est_start_date].present? && (params[:project_module][:est_start_date]).to_date < (@project.est_start_date)) 
      flash[:notice] = "Project  Module Rejected as Module's Estimated Start date is less than Project's Estimated Start date"
      redirect_to new_project_project_module_path(@project)
     else 
      if (params[:project_module][:est_end_date].present? && (params[:project_module][:est_end_date]).to_date  > (@project.est_end_date))
       flash[:notice] = "Project  Module Rejected as Module's Estimated End date is greater than Project's Estimated End date"
       redirect_to new_project_project_module_path(@project)
      else
       @project = Project.find(params[:project_id])
       @project_module  =@project.project_modules.new(project__module_params)
       if @project_module.save
        redirect_to project_project_modules_path(@project), :notice => "Successfully submit Project Module's details"
       else
        render :new 
       end
      end
     end
    else
     @project = Project.find(params[:project_id])
     @project_module  =@project.project_modules.new(project__module_params)
     if @project_module.save
      redirect_to project_project_modules_path(@project), :notice => "Successfully submitted  Project Module's details"
     else
      render :new 
     end
    end
  end

  def index
    @project = Project.find(params[:project_id])
    @project_modules = @project.project_modules
  end

  def show
    @project = Project.find(params[:project_id])
    @project_module =  @project.project_modules.find(params[:id])
	 end

  def update
    @project = Project.find(params[:project_id])
    @project_module = @project.project_modules.find(params[:id])
         if @project_module.update_attributes(project__module_params)
                  redirect_to project_project_modules_path(@project), :notice => "Updated Successfully"
           else
                  render :edit , :notice => "sorry..something is wrong"
        end
  end

  def destroy
     @project = Project.find(params[:project_id])
     project_module = @project.project_modules.find(params[:id])  
     project_module.destroy
      redirect_to project_project_modules_path(@project), :notice => "Successfully deleted"
  end

  def edit
     @project = Project.find(params[:project_id])
     @project_module  = @project.project_modules.find(params[:id])
  end
   
  private
		def check_manager
		 @project = Project.find(params[:project_id]) 
		 
		 redirect_to projects_path  if @project.user != current_user && !current_user.isAdmin
		end
  	def project__module_params
	  	params.require(:project_module).permit(:act_end_date, :act_start_date, :est_end_date, :est_start_date, :project_module_description, :project_module_name,:project_id)
    end
end
